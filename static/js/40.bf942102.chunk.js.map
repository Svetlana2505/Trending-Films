{"version":3,"file":"static/js/40.bf942102.chunk.js","mappings":"qPAEaA,EAAOC,EAAAA,GAAAA,GAAH,4CAIJC,EAAQD,EAAAA,GAAAA,EAAH,4GAOLE,EAAOF,EAAAA,GAAAA,GAAH,gDAIJG,EAAOH,EAAAA,GAAAA,EAAH,iFCfJG,EAAOH,EAAAA,GAAAA,EAAH,+D,SCAJI,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,SAAC,EAAD,UAAOA,GACf,ECDYC,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,8BACGA,EAAQC,QACP,SAACT,EAAD,UACGQ,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACV,EAAD,YACE,UAACD,EAAD,sBAAgBS,MAChB,SAACP,EAAD,UAAOQ,MAFEC,EADA,OAQf,SAACR,EAAD,CAAcC,QAAQ,8CAI7B,ECFD,EAZqB,WACnB,OAA8BQ,EAAAA,EAAAA,UAAS,MAAvC,eAAON,EAAP,KAAgBO,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QACzCN,EAAWM,EACZ,GACF,GAAE,CAACL,KAEG,8BAAGR,IAAW,SAACD,EAAD,CAASC,QAASA,KACxC,C,oKCfKe,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAQ,SAAAC,GACnB,OAAOF,EAAAA,EAAAA,GAAM,sBAAuB,CAClCG,OAAQ,CACNC,QAASL,EACTG,KAAAA,IAGL,EAEYG,EAAmB,SAACC,EAAOJ,GACtC,OAAOF,EAAAA,EAAAA,GAAM,gBAAiB,CAC5BG,OAAQ,CACNC,QAASL,EACTO,MAAAA,EACAJ,KAAAA,IAGL,EAEYK,EAAiB,SAAAf,GAC5B,OAAOQ,EAAAA,EAAAA,GAAM,UAAD,OAAWR,GAAW,CAChCW,OAAQ,CACNC,QAASL,IAGd,EAEYS,EAAoB,SAAAnB,GAC/B,OAAOW,EAAAA,EAAAA,GAAM,UAAD,OAAWX,EAAX,YAAyB,CACnCc,OAAQ,CACNC,QAASL,IAGd,EAEYJ,EAAoB,SAAAN,GAC/B,OAAOW,EAAAA,EAAAA,GAAM,UAAD,OAAWX,EAAX,YAAyB,CACnCc,OAAQ,CACNC,QAASL,IAGd,C","sources":["components/Reviews/Reviews.styled.js","components/Notification/Notification.styled.js","components/Notification/Notification.js","components/Reviews/Reviews.jsx","page/MovieReviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 20px 0;\n`;\n\nexport const Title = styled.p`\n  color: #b8860b;\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  font-size: 15px;\n  line-height: 1.2;\n  color: grey;\n`;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  color: grey;\n  text-align: center;\n`;\n","import { Text } from './Notification.styled';\n\nexport const Notification = ({ message }) => {\n  return <Text>{message}</Text>;\n};\n","import { List, Title, Item, Text } from './Reviews.styled';\nimport { Notification } from 'components/Notification/Notification';\n\nexport const Reviews = ({ reviews }) => {\n  return (\n    <>\n      {reviews.length ? (\n        <List>\n          {reviews.map(({ author, content, id }) => (\n            <Item key={id}>\n              <Title>Author: {author}</Title>\n              <Text>{content}</Text>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <Notification message=\"We don't have any reviews for this movie\" />\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieReviews } from 'services/moviesApi';\nimport { Reviews } from 'components/Reviews/Reviews';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(({ data: { results } }) => {\n      setReviews(results);\n    });\n  }, [movieId]);\n\n  return <>{reviews && <Reviews reviews={reviews} />}</>;\n};\nexport default MovieReviews;\n","import axios from 'axios';\n\nconst API_KEY = 'e84a2dc7e130243e2513aaa2cdb72d34';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetch = page => {\n  return axios(`/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n};\n\nexport const fetchSearchMovie = (query, page) => {\n  return axios(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n    },\n  });\n};\n\nexport const fetchMovieById = movieId => {\n  return axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieCredits = id => {\n  return axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieReviews = id => {\n  return axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n"],"names":["List","styled","Title","Item","Text","Notification","message","Reviews","reviews","length","map","author","content","id","useState","setReviews","movieId","useParams","useEffect","fetchMovieReviews","then","results","data","API_KEY","axios","fetch","page","params","api_key","fetchSearchMovie","query","fetchMovieById","fetchMovieCredits"],"sourceRoot":""}
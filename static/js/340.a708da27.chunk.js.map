{"version":3,"file":"static/js/340.a708da27.chunk.js","mappings":"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","sources":["components/MovieDescription/MovieDescription.styled.js","components/MovieDescription/MovieDescription.jsx","components/Info/Info.styled.js","components/Info/Info.jsx","page/MovieDetails.js","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  color: grey;\n`;\n\nexport const Span = styled.span`\n  font-size: 15px;\n  font-weight: 600;\n  margin-left: 5px;\n  color: grey;\n`;\nexport const List = styled.ul`\n  border-bottom: 1px solid #b8860b;\n  padding: 15px 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n\nexport const Box = styled.div`\n  margin-left: 20px;\n  padding: 15px 0;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n  color: #b8860b;\n`;\n\nexport const Descr = styled.p`\n  margin-bottom: 10px;\n  color: grey;\n`;\n\nexport const SubItem = styled.p`\n  margin-bottom: 5px;\n  font-size: 16px;\n  font-weight: 600;\n  color: #b8860b;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { BsArrowBarLeft } from 'react-icons/bs';\n\nimport {\n  List,\n  Item,\n  Box,\n  Title,\n  SubItem,\n  Descr,\n  StyledLink,\n  Span,\n} from './MovieDescription.styled';\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const MovieDescription = ({\n  movie: { genres, poster_path, release_date, title, vote_average, overview },\n}) => {\n  const strGenres = genres.map(({ name }) => name).join(', ');\n  const location = useLocation();\n\n  return (\n    <>\n      <StyledLink to={location?.state?.from || '/'}>\n        <BsArrowBarLeft />\n        <Span>Go back</Span>\n      </StyledLink>\n      <List>\n        <Item>\n          <img\n            src={poster_path && `${IMAGE_URL}${poster_path}`}\n            alt=\"\"\n            width=\"200\"\n          />\n          <Box>\n            <Title>\n              {title} ({release_date.slice(0, 4)})\n            </Title>\n            <Descr>User Score: {Math.round(vote_average * 10)}%</Descr>\n            <SubItem>Overview:</SubItem>\n            <Descr>{overview}</Descr>\n            <SubItem>Genres:</SubItem>\n            <Descr>{strGenres}</Descr>\n          </Box>\n        </Item>\n      </List>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Box = styled.div`\n  padding: 20px 0;\n  border-bottom: 1px solid #b8860b;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  color: #b8860b;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const StyleLink = styled(NavLink)`\n  color: grey;\n\n  &.active {\n    color: #b8860b;\n  }\n`;\n","import { Box, StyleLink, Title, List, Item } from './Info.styled';\nimport { useLocation } from 'react-router-dom';\nexport const Info = () => {\n  const location = useLocation();\n\n  return (\n    <Box>\n      <Title>Additional information</Title>\n      <List>\n        <Item>\n          <StyleLink to=\"cast\" state={{ from: location?.state?.from }}>\n            Cast\n          </StyleLink>\n        </Item>\n        <Item>\n          <StyleLink to=\"reviews\" state={{ from: location?.state?.from }}>\n            Reviews\n          </StyleLink>\n        </Item>\n      </List>\n    </Box>\n  );\n};\n","import { Outlet, useParams } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { fetchMovieById } from 'services/moviesApi';\nimport { MovieDescription } from 'components/MovieDescription/MovieDescription';\nimport { Info } from 'components/Info/Info';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(({ data }) => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && <MovieDescription movie={movie} />}\n\n      <Info />\n      <Suspense fallback={<h1>Load children</h1>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'e84a2dc7e130243e2513aaa2cdb72d34';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetch = page => {\n  return axios(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n};\n\nexport const fetchSearchMovie = (query, page) => {\n  return axios(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n    },\n  });\n};\n\nexport const fetchMovieById = movieId => {\n  return axios(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieCredits = id => {\n  return axios(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieReviews = id => {\n  return axios(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n"],"names":["StyledLink","styled","NavLink","Span","List","Item","Box","Title","Descr","SubItem","MovieDescription","movie","genres","poster_path","release_date","title","vote_average","overview","strGenres","map","name","join","location","useLocation","to","state","from","src","alt","width","slice","Math","round","StyleLink","Info","movieId","useParams","useState","setMovie","useEffect","fetchMovieById","then","data","Suspense","fallback","API_KEY","BASE_URL","fetch","page","axios","params","api_key","fetchSearchMovie","query","fetchMovieCredits","id","fetchMovieReviews"],"sourceRoot":""}